public class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        
        if(n ==1) return Collections.singletonList(0);
        
        List<Set<Integer>> graph = new ArrayList<>();
        // build the graph
        for(int i = 0 ; i< n ; i++)
        {
            graph.add(new HashSet<Integer>());
        }
        
        for(int[] edge : edges)
        {
            for(int i = 0 ; i< 2; i++)
            {
                graph.get(edge[i]).add(edge[1-i]);
            }
        }
        
        List<Integer> leaves = new ArrayList<>();
        
        for(int i = 0 ; i< n ; i++)
        {
            if(graph.get(i).size()==1) leaves.add(i);
        }
        
        while(n>2)
        {
            n-=leaves.size();
            List<Integer> newLeaves = new ArrayList<>();
            
            for(int i : leaves)
            {
                int j = graph.get(i).iterator().next();
                graph.get(j).remove(i);
                if(graph.get(j).size()==1) newLeaves.add(j);
            }
            
            leaves = newLeaves;
        }
        
        return leaves;
    }
}
