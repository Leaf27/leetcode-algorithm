/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
public  ListNode reverseBetween(ListNode head, int m, int n) {
        ListNode begin=new ListNode(0);
        begin.next=head;
        ListNode before=begin;
        ListNode after=null;
        ListNode nextNode;
        ListNode current=begin;
        ListNode next2;
        for(int i=0;current!=null;i++){
            if(i==(m-1)) before=current;
            if(i==(n+1)) after=current;
            current=current.next;
        }
        current=before.next;
        nextNode=current.next;
        for(int j=m;j<n;j++){
            next2=nextNode.next;
            nextNode.next=current;
            current=nextNode;
            nextNode=next2;
        }
        before.next.next=after;
        before.next=current;
        return begin.next;
        
    }
}
