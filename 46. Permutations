class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        result = [[]]
        for number in nums:
            new_perm = []
            for perm in result:
                for i in range(len(perm)+1):
                    new_perm.append(perm[:i]+[number]+perm[i:])

            result=new_perm
        return result


class Solution(object):
    def permute(self, nums):
        res = []
        sorted(nums)

        while(True):
            res.append(nums)
            nums=list(nums)
            start= len(nums)-1
            while(nums[start-1]>nums[start]):
               start=start-1
               if(start==0):
                   return res

            start=start-1
            end = len(nums)-1
            while(nums[end]<nums[start]):
               end=end-1
            nums[start],nums[end]=nums[end],nums[start]
            nums[start+1:]=sorted(nums[start+1:])
