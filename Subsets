public class Solution {
   	    public  List<List<Integer>> subsets(int[] nums) {
	        List<List<Integer>> result=new ArrayList<List<Integer>>();
	        if(nums.length==0) return result;
	        else{
	        sort(nums);
	        int[] check=new int[nums.length];
	        int sum=(int)(Math.pow(2,nums.length));
	        int count=1;
	        while(count<=sum){
	        List<Integer> row=new ArrayList<Integer>();
	        for(int i=0;i<nums.length;i++){
	            if(check[i]==1) row.add(nums[i]);
	        }        
	        result.add(row);
	        addOne(check);
	        count++;
	        }
	        return result;
	        }
	    }
	    private  void sort(int[] nums){
	        if(nums.length==0||nums.length==1) return ;
	        else{
	        for(int unsort=1;unsort<nums.length;unsort++){
	            int  j=unsort-1;
	            int move=nums[unsort];
	             while(j>=0&&move<nums[j]){
	                 j--;
	             }
	             for(int k=unsort-1;k>j;k--) nums[k+1]=nums[k];
	             nums[j+1]=move;
	           }
	        }
	    }
	    private void addOne(int[] nums){
	        int more=1;
	        int j=nums.length-1;
	        while(more==1&&j>=0){
	            if(nums[j]==1){
	                nums[j]=0;
	                j--;
	            }
	            else {
	                nums[j]=1;
	                more=0;
	        }
	    }
	}
}
