//recursive

public class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> res=new ArrayList<>();
        List<Integer> comb=new ArrayList<>();
        finder(nums, res, comb,target, 4,0);
        return res;
    }
    
    private void finder(int[] nums, List<List<Integer>> res,   List<Integer> comb,int target, int digit,int start){
        if(digit==0){
            if(target==0) res.add(new ArrayList<>(comb));
            return;
        }
        for(int i=start;i<nums.length;i++){
            comb.add(nums[i]);
            finder(nums, res, comb, target-nums[i],digit-1,i+1);
            comb.remove(comb.size()-1);
        }
    }
}

//iteral
