// dfs
public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        recursion(1, n, k, new ArrayList<>(), result);
        return result;
    }
    
    private void recursion(int start, int end, int k, List<Integer> cur, List<List<Integer>> result)
    {
        if (k==0) result.add(new ArrayList<>(cur));
        else if(k<0) return;
        else
        {
            for(int i=start;i<=end;i++)
            {
                cur.add(i);
                recursion(i+1, end, k-1, cur, result);
                cur.remove(cur.size()-1);
            }
        }
    }
}
