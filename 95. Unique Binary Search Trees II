# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    dp=list()
    dp.append([None])
    def generateTrees(self, n):
        """
        :type n: int
        :rtype: List[TreeNode]
        """
        for i in range(len(self.dp),n+1):
            self.dp.append([[None] for _ in range(i)])
            for j in range(i,0,-1):
                self.dp[j].append([])
                for num in range(j,i+1):
                    for left_tree in self.dp[j][num-1]:
                        if num+1>i:
                            root=TreeNode(num)
                            root.left,root.right=left_tree,None
                            self.dp[j][-1].append(root)
                        else:
                            for right_tree in self.dp[num+1][i]:
                                root=TreeNode(num)
                                root.left,root.right=left_tree,right_tree
                                self.dp[j][-1].append(root)
        if n==0:
            return []
        else:
            return self.dp[1][n]
