class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        if not obstacleGrid:
            return 0
        if obstacleGrid[0][0]==1 or obstacleGrid[-1][-1]==1:
            return 0
            
        pre_row=[0]*len(obstacleGrid[0])
        pre_row[0]=1
        for i in range(0,len(obstacleGrid)):
            for j in range(0,len(pre_row)):
                if obstacleGrid[i][j]==1:
                    pre_row[j]=0
                elif j>0:
                    pre_row[j]+=pre_row[j-1]
        return pre_row[-1]
