class NumMatrix(object):
    def __init__(self, matrix):
        """
        initialize your data structure here.
        :type matrix: List[List[int]]
        """
        if matrix:
            len_x=len(matrix[0])
            len_y=len(matrix)
            self.mat_sum=[[0]*(len_x+1) for _ in range(len_y)]
            for y in range(len_y):
                for x in range(1,len_x+1):
                    self.mat_sum[y][x]=self.mat_sum[y][x-1]+matrix[y][x-1]
        else:
           self.mat_sum=None 
              
    def sumRegion(self, row1, col1, row2, col2):
        """
        sum of elements matrix[(row1,col1)..(row2,col2)], inclusive.
        :type row1: int
        :type col1: int
        :type row2: int
        :type col2: int
        :rtype: int
        """
        res=0
        if self.mat_sum:
            for y in range(row1,row2+1):
                res+=self.mat_sum[y][col2+1]-self.mat_sum[y][col1]
        return res
            
        


# Your NumMatrix object will be instantiated and called as such:
# numMatrix = NumMatrix(matrix)
# numMatrix.sumRegion(0, 1, 2, 3)
# numMatrix.sumRegion(1, 2, 3, 4)
