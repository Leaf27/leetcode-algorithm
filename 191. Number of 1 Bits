//use python built-in function
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        return bin(n).count('1')
        
//use n&(n-1) to remove the least siginificant 1
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        count=0
        while(n!=0):
            n=n&(n-1)
            count+=1
        return count
    
// bit operator
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        count=0
        while(n!=0):
            count+=n&1
            n=n>>1
        return count
